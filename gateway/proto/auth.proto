syntax = "proto3";

import "google/api/annotations.proto";

//option java_multiple_files = true;
option go_package = "web/hw1/auth";
//option go_package = "github.com/anshulrgoyal/grpc-gateway-demo;grpc_gateway_demo";
package auth;

service Auth {
  rpc req_pq (Req_pq_input) returns (Req_pq_response) {
    option (google.api.http) = {
      get: "/req_pq"
    };
  }
  rpc req_DH_params(Req_DH_params_input) returns (Req_DH_params_response) {
    option (google.api.http) = {
      // this is url, for RESTfull/JSON api and method
      // this line means when a HTTP post request comes with "/v1/sayHello" call this rpc method over this service
      get: "/req_dh_params"
    };
  }
}

message Req_pq_input {
  string nonce = 1;
  int32 message_id = 2;
}

message Req_pq_response {
  string nonce = 1;
  string server_nonce = 2;
  int32 message_id = 3;
  int32  p = 4;
  int32  g = 5;
}


message Req_DH_params_input {
  string nonce = 1;
  string server_nonce = 2;
  int32 message_id = 3;
  int32  a = 4;
}

message Req_DH_params_response {
  string nonce = 1;
  string server_nonce = 2;
  int32 message_id = 3;
  int32  b = 4;
}

service Biz {
  rpc get_users (get_user_input1) returns (get_user_output) {
    option (google.api.http) = {
      get: "/get_users"
    };
  }
  rpc get_users_with_sql_injection (get_user_input2) returns (get_user_output) {
    option (google.api.http) = {
      get: "/get_users_sql"
    };
  }
}


message get_user_input1 {
  int32 user_id = 1;
  string auth_key = 2;
  int32 message_id = 3;
}

message get_user_input2 {
  string user_id = 1;
  string auth_key = 2;
  int32 message_id = 3;
}

message get_user_output {
  repeated User user = 1;
  int32 message_id = 2;
}

message User {
  string name = 1;
  string family = 2;
  int32 id = 3;
  int32 age = 4;
  string sex = 5;
  int64 createdAt = 6;
}